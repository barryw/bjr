/*
 * BJR API V1
 *
 * API specification for the BJR job server.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BJR.Api;
using BJR.Model;
using BJR.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BJR.Test.Model
{
    /// <summary>
    ///  Class for testing UserNewIn
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UserNewInTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for UserNewIn
        //private UserNewIn instance;

        public UserNewInTests()
        {
            // TODO uncomment below to create an instance of UserNewIn
            //instance = new UserNewIn();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserNewIn
        /// </summary>
        [Fact]
        public void UserNewInInstanceTest()
        {
            // TODO uncomment below to test "IsType" UserNewIn
            //Assert.IsType<UserNewIn>(instance);
        }


        /// <summary>
        /// Test the property 'Username'
        /// </summary>
        [Fact]
        public void UsernameTest()
        {
            // TODO unit test for the property 'Username'
        }
        /// <summary>
        /// Test the property 'Password'
        /// </summary>
        [Fact]
        public void PasswordTest()
        {
            // TODO unit test for the property 'Password'
        }
        /// <summary>
        /// Test the property 'PasswordConfirmation'
        /// </summary>
        [Fact]
        public void PasswordConfirmationTest()
        {
            // TODO unit test for the property 'PasswordConfirmation'
        }

    }

}
