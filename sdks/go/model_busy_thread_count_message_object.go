/*
 * BJR API V1
 *
 * API specification for the BJR job server.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package BJR

import (
	"encoding/json"
)

// BusyThreadCountMessageObject struct for BusyThreadCountMessageObject
type BusyThreadCountMessageObject struct {
	// The total number of busy workers across all pods/hosts.
	TotalBusy *int32 `json:"total_busy,omitempty"`
	Hosts *[]BusyThreadCountMessageObjectHosts `json:"hosts,omitempty"`
}

// NewBusyThreadCountMessageObject instantiates a new BusyThreadCountMessageObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBusyThreadCountMessageObject() *BusyThreadCountMessageObject {
	this := BusyThreadCountMessageObject{}
	return &this
}

// NewBusyThreadCountMessageObjectWithDefaults instantiates a new BusyThreadCountMessageObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBusyThreadCountMessageObjectWithDefaults() *BusyThreadCountMessageObject {
	this := BusyThreadCountMessageObject{}
	return &this
}

// GetTotalBusy returns the TotalBusy field value if set, zero value otherwise.
func (o *BusyThreadCountMessageObject) GetTotalBusy() int32 {
	if o == nil || o.TotalBusy == nil {
		var ret int32
		return ret
	}
	return *o.TotalBusy
}

// GetTotalBusyOk returns a tuple with the TotalBusy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusyThreadCountMessageObject) GetTotalBusyOk() (*int32, bool) {
	if o == nil || o.TotalBusy == nil {
		return nil, false
	}
	return o.TotalBusy, true
}

// HasTotalBusy returns a boolean if a field has been set.
func (o *BusyThreadCountMessageObject) HasTotalBusy() bool {
	if o != nil && o.TotalBusy != nil {
		return true
	}

	return false
}

// SetTotalBusy gets a reference to the given int32 and assigns it to the TotalBusy field.
func (o *BusyThreadCountMessageObject) SetTotalBusy(v int32) {
	o.TotalBusy = &v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *BusyThreadCountMessageObject) GetHosts() []BusyThreadCountMessageObjectHosts {
	if o == nil || o.Hosts == nil {
		var ret []BusyThreadCountMessageObjectHosts
		return ret
	}
	return *o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusyThreadCountMessageObject) GetHostsOk() (*[]BusyThreadCountMessageObjectHosts, bool) {
	if o == nil || o.Hosts == nil {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *BusyThreadCountMessageObject) HasHosts() bool {
	if o != nil && o.Hosts != nil {
		return true
	}

	return false
}

// SetHosts gets a reference to the given []BusyThreadCountMessageObjectHosts and assigns it to the Hosts field.
func (o *BusyThreadCountMessageObject) SetHosts(v []BusyThreadCountMessageObjectHosts) {
	o.Hosts = &v
}

func (o BusyThreadCountMessageObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalBusy != nil {
		toSerialize["total_busy"] = o.TotalBusy
	}
	if o.Hosts != nil {
		toSerialize["hosts"] = o.Hosts
	}
	return json.Marshal(toSerialize)
}

type NullableBusyThreadCountMessageObject struct {
	value *BusyThreadCountMessageObject
	isSet bool
}

func (v NullableBusyThreadCountMessageObject) Get() *BusyThreadCountMessageObject {
	return v.value
}

func (v *NullableBusyThreadCountMessageObject) Set(val *BusyThreadCountMessageObject) {
	v.value = val
	v.isSet = true
}

func (v NullableBusyThreadCountMessageObject) IsSet() bool {
	return v.isSet
}

func (v *NullableBusyThreadCountMessageObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBusyThreadCountMessageObject(val *BusyThreadCountMessageObject) *NullableBusyThreadCountMessageObject {
	return &NullableBusyThreadCountMessageObject{value: val, isSet: true}
}

func (v NullableBusyThreadCountMessageObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBusyThreadCountMessageObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


