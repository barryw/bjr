/*
 * BJR API V1
 *
 * API specification for the BJR job server.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package BJR

import (
	"encoding/json"
)

// BusyThreadCountMessageObjectHosts struct for BusyThreadCountMessageObjectHosts
type BusyThreadCountMessageObjectHosts struct {
	// The name of the worker host.
	Name *string `json:"name,omitempty"`
	// The number of busy threads on the worker.
	Busy *int32 `json:"busy,omitempty"`
	// The process ID of the worker process.
	Pid *int32 `json:"pid,omitempty"`
}

// NewBusyThreadCountMessageObjectHosts instantiates a new BusyThreadCountMessageObjectHosts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBusyThreadCountMessageObjectHosts() *BusyThreadCountMessageObjectHosts {
	this := BusyThreadCountMessageObjectHosts{}
	return &this
}

// NewBusyThreadCountMessageObjectHostsWithDefaults instantiates a new BusyThreadCountMessageObjectHosts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBusyThreadCountMessageObjectHostsWithDefaults() *BusyThreadCountMessageObjectHosts {
	this := BusyThreadCountMessageObjectHosts{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BusyThreadCountMessageObjectHosts) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusyThreadCountMessageObjectHosts) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BusyThreadCountMessageObjectHosts) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BusyThreadCountMessageObjectHosts) SetName(v string) {
	o.Name = &v
}

// GetBusy returns the Busy field value if set, zero value otherwise.
func (o *BusyThreadCountMessageObjectHosts) GetBusy() int32 {
	if o == nil || o.Busy == nil {
		var ret int32
		return ret
	}
	return *o.Busy
}

// GetBusyOk returns a tuple with the Busy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusyThreadCountMessageObjectHosts) GetBusyOk() (*int32, bool) {
	if o == nil || o.Busy == nil {
		return nil, false
	}
	return o.Busy, true
}

// HasBusy returns a boolean if a field has been set.
func (o *BusyThreadCountMessageObjectHosts) HasBusy() bool {
	if o != nil && o.Busy != nil {
		return true
	}

	return false
}

// SetBusy gets a reference to the given int32 and assigns it to the Busy field.
func (o *BusyThreadCountMessageObjectHosts) SetBusy(v int32) {
	o.Busy = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *BusyThreadCountMessageObjectHosts) GetPid() int32 {
	if o == nil || o.Pid == nil {
		var ret int32
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusyThreadCountMessageObjectHosts) GetPidOk() (*int32, bool) {
	if o == nil || o.Pid == nil {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *BusyThreadCountMessageObjectHosts) HasPid() bool {
	if o != nil && o.Pid != nil {
		return true
	}

	return false
}

// SetPid gets a reference to the given int32 and assigns it to the Pid field.
func (o *BusyThreadCountMessageObjectHosts) SetPid(v int32) {
	o.Pid = &v
}

func (o BusyThreadCountMessageObjectHosts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Busy != nil {
		toSerialize["busy"] = o.Busy
	}
	if o.Pid != nil {
		toSerialize["pid"] = o.Pid
	}
	return json.Marshal(toSerialize)
}

type NullableBusyThreadCountMessageObjectHosts struct {
	value *BusyThreadCountMessageObjectHosts
	isSet bool
}

func (v NullableBusyThreadCountMessageObjectHosts) Get() *BusyThreadCountMessageObjectHosts {
	return v.value
}

func (v *NullableBusyThreadCountMessageObjectHosts) Set(val *BusyThreadCountMessageObjectHosts) {
	v.value = val
	v.isSet = true
}

func (v NullableBusyThreadCountMessageObjectHosts) IsSet() bool {
	return v.isSet
}

func (v *NullableBusyThreadCountMessageObjectHosts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBusyThreadCountMessageObjectHosts(val *BusyThreadCountMessageObjectHosts) *NullableBusyThreadCountMessageObjectHosts {
	return &NullableBusyThreadCountMessageObjectHosts{value: val, isSet: true}
}

func (v NullableBusyThreadCountMessageObjectHosts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBusyThreadCountMessageObjectHosts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


