/*
 * BJR API V1
 *
 * API specification for the BJR job server.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package BJR

import (
	"encoding/json"
)

// UserNewIn struct for UserNewIn
type UserNewIn struct {
	// The new user's username. Must be unique.
	Username string `json:"username"`
	// The new user's password.
	Password string `json:"password"`
	// The new user's password confirmation. Must match 'password'.
	PasswordConfirmation string `json:"password_confirmation"`
}

// NewUserNewIn instantiates a new UserNewIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserNewIn(username string, password string, passwordConfirmation string) *UserNewIn {
	this := UserNewIn{}
	this.Username = username
	this.Password = password
	this.PasswordConfirmation = passwordConfirmation
	return &this
}

// NewUserNewInWithDefaults instantiates a new UserNewIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserNewInWithDefaults() *UserNewIn {
	this := UserNewIn{}
	return &this
}

// GetUsername returns the Username field value
func (o *UserNewIn) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *UserNewIn) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *UserNewIn) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *UserNewIn) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *UserNewIn) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *UserNewIn) SetPassword(v string) {
	o.Password = v
}

// GetPasswordConfirmation returns the PasswordConfirmation field value
func (o *UserNewIn) GetPasswordConfirmation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PasswordConfirmation
}

// GetPasswordConfirmationOk returns a tuple with the PasswordConfirmation field value
// and a boolean to check if the value has been set.
func (o *UserNewIn) GetPasswordConfirmationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PasswordConfirmation, true
}

// SetPasswordConfirmation sets field value
func (o *UserNewIn) SetPasswordConfirmation(v string) {
	o.PasswordConfirmation = v
}

func (o UserNewIn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["password_confirmation"] = o.PasswordConfirmation
	}
	return json.Marshal(toSerialize)
}

type NullableUserNewIn struct {
	value *UserNewIn
	isSet bool
}

func (v NullableUserNewIn) Get() *UserNewIn {
	return v.value
}

func (v *NullableUserNewIn) Set(val *UserNewIn) {
	v.value = val
	v.isSet = true
}

func (v NullableUserNewIn) IsSet() bool {
	return v.isSet
}

func (v *NullableUserNewIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserNewIn(val *UserNewIn) *NullableUserNewIn {
	return &NullableUserNewIn{value: val, isSet: true}
}

func (v NullableUserNewIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserNewIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


