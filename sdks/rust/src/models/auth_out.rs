/*
 * BJR API V1
 *
 * API specification for the BJR job server.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuthOut {
    /// The JWT authentication token. This must be passed in the Authorization header on subsequent requests.
    #[serde(rename = "auth_token", skip_serializing_if = "Option::is_none")]
    pub auth_token: Option<String>,
    /// The id of the authenticated user.
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<i32>,
    /// If authentication failed, this will contain the reason why.
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    /// This will be true if the authentication was successful, and false if not.
    #[serde(rename = "is_error", skip_serializing_if = "Option::is_none")]
    pub is_error: Option<bool>,
    /// The HTTP status code returned.
    #[serde(rename = "status_code", skip_serializing_if = "Option::is_none")]
    pub status_code: Option<i32>,
}

impl AuthOut {
    pub fn new() -> AuthOut {
        AuthOut {
            auth_token: None,
            user_id: None,
            message: None,
            is_error: None,
            status_code: None,
        }
    }
}


