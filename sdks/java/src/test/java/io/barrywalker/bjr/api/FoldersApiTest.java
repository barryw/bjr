/*
 * BJR API V1
 * API specification for the BJR job server.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.barrywalker.bjr.api;

import io.barrywalker.bjr.ApiException;
import io.barrywalker.bjr.model.FolderArrayMessage;
import io.barrywalker.bjr.model.JobArrayMessage;
import io.barrywalker.bjr.model.SingleFolderMessage;
import io.barrywalker.bjr.model.SingleJobMessage;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FoldersApi
 */
@Ignore
public class FoldersApiTest {

    private final FoldersApi api = new FoldersApi();

    
    /**
     * Create a new Folder
     *
     * Create a new Folder
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createFolderTest() throws ApiException {
        String name = null;
        String expression = null;
        SingleFolderMessage response = api.createFolder(name, expression);

        // TODO: test validations
    }
    
    /**
     * Delete an existing folder
     *
     * Delete an existing folder
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteFolderTest() throws ApiException {
        Integer id = null;
        SingleFolderMessage response = api.deleteFolder(id);

        // TODO: test validations
    }
    
    /**
     * Return a single folder
     *
     * Return a single folder
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFolderTest() throws ApiException {
        Integer id = null;
        SingleFolderMessage response = api.getFolder(id);

        // TODO: test validations
    }
    
    /**
     * Return list of jobs in a folder
     *
     * Return list of jobs in a folder
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFolderJobsTest() throws ApiException {
        Integer id = null;
        Integer perPage = null;
        Integer page = null;
        JobArrayMessage response = api.getFolderJobs(id, perPage, page);

        // TODO: test validations
    }
    
    /**
     * Return paginated list of all folders
     *
     * Return paginated list of all folders
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFoldersTest() throws ApiException {
        Integer perPage = null;
        Integer page = null;
        FolderArrayMessage response = api.getFolders(perPage, page);

        // TODO: test validations
    }
    
    /**
     * Update an existing folder
     *
     * Update an existing folder
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateFolderTest() throws ApiException {
        Integer id = null;
        String name = null;
        String expression = null;
        SingleFolderMessage response = api.updateFolder(id, name, expression);

        // TODO: test validations
    }
    
}
