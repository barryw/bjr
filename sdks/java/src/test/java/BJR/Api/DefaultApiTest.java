/*
 * BJR API V1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package BJR.Api;

import BJR.ApiException;
import BJR.Model.AuthIn;
import BJR.Model.AuthOut;
import BJR.Model.JobIn;
import BJR.Model.Out;
import BJR.Model.UserNewIn;
import BJR.Model.UserUpdateIn;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Authenticates a user and returns a token
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void authenticatePostTest() throws ApiException {
        AuthIn body = null;
        AuthOut response = api.authenticatePost(body);

        // TODO: test validations
    }
    /**
     * Retrieves jobs
     *
     * Retrieves jobs
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobApiGetTest() throws ApiException {
        api.jobApiGet();

        // TODO: test validations
    }
    /**
     * Deletes a job
     *
     * Deletes a job
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobApiIdDeleteTest() throws ApiException {
        Integer id = null;
        api.jobApiIdDelete(id);

        // TODO: test validations
    }
    /**
     * Retrieves a single job
     *
     * Retrieves a single job
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobApiIdGetTest() throws ApiException {
        Integer id = null;
        api.jobApiIdGet(id);

        // TODO: test validations
    }
    /**
     * Updates a single job
     *
     * Updates a single job
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobApiIdPutTest() throws ApiException {
        Integer id = null;
        JobIn body = null;
        Out response = api.jobApiIdPut(id, body);

        // TODO: test validations
    }
    /**
     * Creates a job
     *
     * Creates a job
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobApiPostTest() throws ApiException {
        JobIn body = null;
        Out response = api.jobApiPost(body);

        // TODO: test validations
    }
    /**
     * Retrieves users
     *
     * Get a list of users
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userApiGetTest() throws ApiException {
        api.userApiGet();

        // TODO: test validations
    }
    /**
     * Deletes a user
     *
     * Deletes a user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userApiIdDeleteTest() throws ApiException {
        Integer id = null;
        Out response = api.userApiIdDelete(id);

        // TODO: test validations
    }
    /**
     * Retrieve a single user
     *
     * Retrieve a single user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userApiIdGetTest() throws ApiException {
        Integer id = null;
        Out response = api.userApiIdGet(id);

        // TODO: test validations
    }
    /**
     * Update a single user
     *
     * Update a single user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userApiIdPutTest() throws ApiException {
        Integer id = null;
        UserUpdateIn body = null;
        Out response = api.userApiIdPut(id, body);

        // TODO: test validations
    }
    /**
     * Creates a user
     *
     * Create a new user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userApiPostTest() throws ApiException {
        UserNewIn body = null;
        Out response = api.userApiPost(body);

        // TODO: test validations
    }
}
