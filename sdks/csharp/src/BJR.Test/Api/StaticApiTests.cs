/*
 * BJR API V1
 *
 * API specification for the BJR job server.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using BJR.Client;
using BJR.Api;
using BJR.Model;

namespace BJR.Test
{
    /// <summary>
    ///  Class for testing StaticApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class StaticApiTests
    {
        private StaticApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new StaticApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of StaticApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' StaticApi
            //Assert.IsInstanceOf(typeof(StaticApi), instance);
        }

        
        /// <summary>
        /// Test GetTags
        /// </summary>
        [Test]
        public void GetTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? perPage = null;
            //int? page = null;
            //var response = instance.GetTags(perPage, page);
            //Assert.IsInstanceOf(typeof(TagMessage), response, "response is TagMessage");
        }
        
        /// <summary>
        /// Test GetTimezones
        /// </summary>
        [Test]
        public void GetTimezonesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetTimezones();
            //Assert.IsInstanceOf(typeof(TimezoneMessage), response, "response is TimezoneMessage");
        }
        
        /// <summary>
        /// Test GetVersion
        /// </summary>
        [Test]
        public void GetVersionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetVersion();
            //Assert.IsInstanceOf(typeof(ServerVersion), response, "response is ServerVersion");
        }
        
    }

}
